""" eve.py --

 UI generated by GUI Builder Build 146 on 2010-01-25 23:08:35 from:
    F:/geprogge/eve tools/eve.ui
 This file is auto-generated.  Only the code within
    '# BEGIN USER CODE (global|class)'
    '# END USER CODE (global|class)'
 and code inside the callback subroutines will be round-tripped.
 The 'main' function is reserved.
"""

from Tkinter import *
from eve_ui import Eve

# BEGIN USER CODE global

# END USER CODE global

class CustomEve(Eve):
    pass

    # BEGIN CALLBACK CODE
    # ONLY EDIT CODE INSIDE THE def FUNCTIONS.

    # calc_command --
    #
    # Callback to handle calc widget option -command
    def calc_command(self, *args):
        pass

    # destination_invalidcommand --
    #
    # Callback to handle destination widget option -invalidcommand
    def destination_invalidcommand(self, *args):
        pass

    # destination_validatecommand --
    #
    # Callback to handle destination widget option -validatecommand
    def destination_validatecommand(self, *args):
        pass

    # destination_xscrollcommand --
    #
    # Callback to handle destination widget option -xscrollcommand
    def destination_xscrollcommand(self, *args):
        pass

    # start_invalidcommand --
    #
    # Callback to handle start widget option -invalidcommand
    def start_invalidcommand(self, *args):
        pass

    # start_validatecommand --
    #
    # Callback to handle start widget option -validatecommand
    def start_validatecommand(self, *args):
        pass

    # start_xscrollcommand --
    #
    # Callback to handle start widget option -xscrollcommand
    def start_xscrollcommand(self, *args):
        pass

    # END CALLBACK CODE

    # BEGIN USER CODE class

    # END USER CODE class

def main():
    # Standalone Code Initialization
    # DO NOT EDIT
    try: userinit()
    except NameError: pass
    root = Tk()
    demo = CustomEve(root)
    root.title('eve')
    try: run()
    except NameError: pass
    root.protocol('WM_DELETE_WINDOW', root.quit)
    root.mainloop()

if __name__ == '__main__': main()
